/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'

export function FullSkit(props) {
    const { nodes, materials } = useGLTF('/mergedbake.glb')
     const bakedTexture = useTexture("/mergedbake.jpg");

	bakedTexture.flipY = false;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Siena_Table.geometry}
        material={nodes.Siena_Table.material}
        position={[1.047, 0.578, 1.244]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[1.229, 1.47, 1.229]}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RUYLOPEZPAWNWHITE.geometry}
        material={nodes.RUYLOPEZPAWNWHITE.material}
        position={[1.129, 1.711, 1.195]}
        scale={1.093}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Knight003.geometry}
        material={nodes.Knight003.material}
        position={[1.127, 1.724, 1.287]}
        scale={1.093}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.king001.geometry}
        material={nodes.king001.material}
        position={[1.247, 1.869, 1.072]}
        scale={1.093}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.king000.geometry}
        material={nodes.king000.material}
        position={[1.01, 1.869, 1.419]}
        scale={1.093}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.board.geometry}
        material={nodes.board.material}
        position={[1.072, 1.617, 1.246]}
        scale={1.093}
      ><meshBasicMaterial map={bakedTexture} /></mesh>
    </group>
  )
}

useGLTF.preload('/mergedbake.glb')


